{"ast":null,"code":"var _jsxFileName = \"/Users/Andrew/Documents/OneDrive - University Of Houston/AAA+++ Stuff/SWD/frontend/src/components/Quote/FuelQuoteForm.jsx\";\nimport React from 'react';\nimport { useState } from 'react';\nimport \"./Fuelquoteform.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FuelQuoteForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddRow = () => {\n      Date.prototype.yyyymmdd = function () {\n        var mm = this.getMonth() + 1; // getMonth() is zero-based\n\n        var dd = this.getDate();\n        return [this.getFullYear(), (mm > 9 ? '' : '0') + mm, (dd > 9 ? '' : '0') + dd].join('-');\n      };\n\n      var date = new Date();\n      const item = {\n        quoteDate: date.yyyymmdd(),\n        deliveryDate: this.state.deliveryDate,\n        gallons: this.state.gallons,\n        total: this.state.total,\n        ppg: this.state.ppg\n      };\n      this.setState({\n        rows: [...this.state.rows, item]\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        total: Math.round(this.state.ppg * this.state.gallons * 100) / 100\n      }, function () {\n        this.handleAddRow();\n      });\n    };\n\n    this.heading = [{\n      id: 0,\n      label: \"Quote Date\"\n    }, {\n      id: 1,\n      label: \"Gallons\"\n    }, {\n      id: 2,\n      label: \"Delivery Date\"\n    }, {\n      id: 3,\n      label: \"PPG\"\n    }, {\n      id: 4,\n      label: \"Delivery Address\"\n    }, {\n      id: 5,\n      label: \"Total\"\n    }];\n    this.state = {\n      gallons: 0,\n      deliveryDate: \"\",\n      total: 0.00,\n      // Set by the pricing module\n      ppg: 34.34,\n      //Set by the client profile\n      deliveryAddress: \"2115 Heather Green Dr.\",\n      rows: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  // From: https://stackoverflow.com/a/55556258/817946\n  currencyFormat(num) {\n    return '$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quoteForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pricing Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Gallons:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"numberOfGallons\",\n              value: this.state.gallons,\n              name: \"gallons\",\n              onChange: e => this.handleInputChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Delivery Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"deliveryAddress\",\n              value: this.state.deliveryAddress,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Delivery date\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"deliveryDate\",\n              name: \"deliveryDate\",\n              value: this.state.date,\n              onChange: e => this.handleInputChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Price per gallon\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"pricePerGallon\",\n              value: this.state.ppg,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"totalPrice\",\n          children: this.currencyFormat(this.state.total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"quote-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: this.heading.map((item, key) => {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"center\", {\n                    children: item.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 55\n                  }, this)\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 41\n                }, this);\n              })\n            }, \"head\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.rows.map((item, key) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                id: \"addr0\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"center\", {\n                    children: item.quoteDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"center\", {\n                    children: item.gallons\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"center\", {\n                    children: item.deliveryDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"center\", {\n                    children: item.ppg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"center\", {\n                    children: item.deliveryDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"center\", {\n                    children: item.total\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 41\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FuelQuoteForm;","map":{"version":3,"sources":["/Users/Andrew/Documents/OneDrive - University Of Houston/AAA+++ Stuff/SWD/frontend/src/components/Quote/FuelQuoteForm.jsx"],"names":["React","useState","FuelQuoteForm","Component","constructor","props","handleAddRow","Date","prototype","yyyymmdd","mm","getMonth","dd","getDate","getFullYear","join","date","item","quoteDate","deliveryDate","state","gallons","total","ppg","setState","rows","handleSubmit","event","preventDefault","Math","round","heading","id","label","deliveryAddress","handleInputChange","bind","target","value","type","checked","name","currencyFormat","num","toFixed","replace","render","e","map","key"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport \"./Fuelquoteform.css\"\n\nclass FuelQuoteForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            gallons: 0,\n            deliveryDate: \"\",\n            total: 0.00,\n\n            // Set by the pricing module\n            ppg: 34.34,\n\n            //Set by the client profile\n            deliveryAddress: \"2115 Heather Green Dr.\",\n            rows: []\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleAddRow = () => {\n        Date.prototype.yyyymmdd = function () {\n            var mm = this.getMonth() + 1; // getMonth() is zero-based\n            var dd = this.getDate();\n\n            return [this.getFullYear(),\n            (mm > 9 ? '' : '0') + mm,\n            (dd > 9 ? '' : '0') + dd\n            ].join('-');\n        };\n\n        var date = new Date();\n        const item = {\n            quoteDate: date.yyyymmdd(),\n            deliveryDate: this.state.deliveryDate,\n            gallons: this.state.gallons,\n            total: this.state.total,\n            ppg: this.state.ppg\n        };\n        this.setState({\n            rows: [...this.state.rows, item]\n        });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({\n            total: Math.round(this.state.ppg * this.state.gallons * 100) / 100\n        }, function () {\n            this.handleAddRow();\n        })\n    }\n\n    heading = [\n        {\n            id: 0,\n            label: \"Quote Date\"\n        },\n        {\n            id: 1,\n            label: \"Gallons\"\n        },\n        {\n            id: 2,\n            label: \"Delivery Date\"\n        },\n        {\n            id: 3,\n            label: \"PPG\"\n        },\n        {\n            id: 4,\n            label: \"Delivery Address\"\n        },\n        {\n            id: 5,\n            label: \"Total\"\n        }];\n\n    // From: https://stackoverflow.com/a/55556258/817946\n    currencyFormat(num) {\n        return '$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n    }\n\n    render() {\n        return (\n            <div className=\"container\" >\n                <div className=\"quoteForm\">\n                    <h3>Pricing Form</h3>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>Gallons:\n                            <input type=\"number\"\n                                className=\"numberOfGallons\"\n                                value={this.state.gallons}\n                                name=\"gallons\"\n                                onChange={(e) => this.handleInputChange(e)}\n                            />\n                        </label>\n                        <br />\n                        <label>\n                            Delivery Address:\n                            <input type=\"text\"\n                                className=\"deliveryAddress\"\n                                value={this.state.deliveryAddress}\n                                readOnly={true}\n                            />\n                        </label>\n                        <br />\n                        <label>Delivery date\n                            <input type=\"date\"\n                                className=\"deliveryDate\"\n                                name=\"deliveryDate\"\n                                value={this.state.date}\n                                onChange={(e) => this.handleInputChange(e)}\n                            />\n                        </label>\n                        <br />\n                        <label>Price per gallon\n                            <input\n                                className=\"pricePerGallon\"\n                                value={this.state.ppg}\n                                readOnly={true}\n                            />\n                        </label>\n                        <br />\n                        <input type=\"submit\" />\n                    </form>\n                    <h4 className=\"totalPrice\">{this.currencyFormat(this.state.total)}</h4>\n                </div>\n                <div className=\"table-container\">\n                    <table className=\"quote-table\">\n                        <thead>\n                            <tr key=\"head\" >\n                                {this.heading.map((item, key) => {\n                                    return (\n                                        <td key={key}><center>{item.label}</center></td>\n                                    )\n                                })}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.rows.map((item, key) => {\n                                return (\n                                    <tr id=\"addr0\" key={key} >\n                                        <td><center>{item.quoteDate}</center></td>\n                                        <td><center>{item.gallons}</center></td>\n                                        <td><center>{item.deliveryDate}</center></td>\n                                        <td><center>{item.ppg}</center></td>\n                                        <td><center>{item.deliveryDate}</center></td>\n                                        <td><center>{item.total}</center></td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                </div >\n            </div>\n        )\n    }\n}\n\nexport default FuelQuoteForm;"]},"metadata":{},"sourceType":"module"}