{"ast":null,"code":"var _jsxFileName = \"/Users/Andrew/Documents/OneDrive - University Of Houston/AAA+++ Stuff/SWD/frontend/src/components/Quote/FuelQuoteForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport \"./Fuelquoteform.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FuelQuoteForm() {\n  _s();\n\n  const [gallons, setGallons] = useState(0);\n  const [date, setDeliveryDate] = useState(\"\");\n  const [total, setTotal] = useState(0.00); // Set by the pricing module\n\n  const pricePerGallon = 34.34; // Set by the client profile\n\n  const deliveryAddress = \"2115 Heather Green Dr.\";\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setTotal(Math.round(pricePerGallon * gallons * 100) / 100);\n  }; // From: https://stackoverflow.com/a/55556258/817946\n\n\n  function currencyFormat(num) {\n    return '$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n  }\n\n  const handleChange = idx => e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const rows = [...this.state.rows];\n    rows[idx] = {\n      [name]: value\n    };\n    this.setState({\n      rows\n    });\n  };\n\n  const handleAddRow = () => {\n    const item = {\n      name: \"\",\n      mobile: \"\"\n    };\n    this.setState({\n      rows: [...this.state.rows, item]\n    });\n  }; // Temp state var until I implement Redux\n  // for table rows\n\n\n  const heading = [{\n    id: 0,\n    label: \"Quote Data\"\n  }, {\n    id: 1,\n    label: \"Gallons\"\n  }, {\n    id: 2,\n    label: \"Delivery Date\"\n  }, {\n    id: 3,\n    label: \"PPG\"\n  }, {\n    id: 4,\n    label: \"Total\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quoteForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pricing Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Gallons:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"numberOfGallons\",\n            value: gallons,\n            onChange: e => setGallons(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Delivery Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"deliveryAddress\",\n            value: deliveryAddress,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Delivery date\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"deliveryDate\",\n            value: date,\n            onChange: e => setDeliveryDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Price per gallon\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"pricePerGallon\",\n            value: pricePerGallon,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"totalPrice\",\n        children: currencyFormat(total)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quoteTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"quote-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: heading.map((item, key) => {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"center\", {\n                    children: item.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 55\n                  }, this)\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 41\n                }, this);\n              })\n            }, \"head\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.rows.map((item, key) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                id: \"addr0\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"center\", {\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.age\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 41\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FuelQuoteForm, \"2lx4Afzyb4qQO/p35IP9UeXsws0=\");\n\n_c = FuelQuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FuelQuoteForm\");","map":{"version":3,"sources":["/Users/Andrew/Documents/OneDrive - University Of Houston/AAA+++ Stuff/SWD/frontend/src/components/Quote/FuelQuoteForm.jsx"],"names":["React","useState","FuelQuoteForm","gallons","setGallons","date","setDeliveryDate","total","setTotal","pricePerGallon","deliveryAddress","handleSubmit","event","preventDefault","Math","round","currencyFormat","num","toFixed","replace","handleChange","idx","e","name","value","target","rows","state","setState","handleAddRow","item","mobile","heading","id","label","map","key","age"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport \"./Fuelquoteform.css\"\n\nexport default function FuelQuoteForm() {\n    const [gallons, setGallons] = useState(0);\n    const [date, setDeliveryDate] = useState(\"\");\n    const [total, setTotal] = useState(0.00);\n\n    // Set by the pricing module\n    const pricePerGallon = 34.34;\n\n    // Set by the client profile\n    const deliveryAddress = \"2115 Heather Green Dr.\"\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setTotal(Math.round(pricePerGallon * gallons * 100) / 100)\n    }\n\n    // From: https://stackoverflow.com/a/55556258/817946\n    function currencyFormat(num) {\n        return '$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n    }\n\n    const handleChange = idx => e => {\n        const { name, value } = e.target;\n        const rows = [...this.state.rows];\n        rows[idx] = {\n            [name]: value\n        };\n        this.setState({\n            rows\n        });\n    };\n\n    const handleAddRow = () => {\n        const item = {\n            name: \"\",\n            mobile: \"\"\n        };\n        this.setState({\n            rows: [...this.state.rows, item]\n        });\n    };\n\n    // Temp state var until I implement Redux\n    // for table rows\n\n\n    const heading = [\n        {\n            id: 0,\n            label: \"Quote Data\"\n        },\n        {\n            id: 1,\n            label: \"Gallons\"\n        },\n        {\n            id: 2,\n            label: \"Delivery Date\"\n        },\n        {\n            id: 3,\n            label: \"PPG\"\n        },\n        {\n            id: 4,\n            label: \"Total\"\n        }];\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"quoteForm\">\n                <h3>Pricing Form</h3>\n                <form onSubmit={handleSubmit}>\n                    <label>Gallons:\n                        <input type=\"number\"\n                            className=\"numberOfGallons\"\n                            value={gallons}\n                            onChange={(e) => setGallons(e.target.value)}\n                        />\n                    </label>\n                    <br />\n                    <label>\n                        Delivery Address:\n                        <input type=\"text\"\n                            className=\"deliveryAddress\"\n                            value={deliveryAddress}\n                            readOnly={true}\n                        />\n                    </label>\n                    <br />\n                    <label>Delivery date\n                        <input type=\"date\"\n                            className=\"deliveryDate\"\n                            value={date}\n                            onChange={(e) => setDeliveryDate(e.target.value)}\n                        />\n                    </label>\n                    <br />\n                    <label>Price per gallon\n                        <input\n                            className=\"pricePerGallon\"\n                            value={pricePerGallon}\n                            readOnly={true}\n                        />\n                    </label>\n                    <br />\n                    <input type=\"submit\" />\n                </form>\n                <h4 className=\"totalPrice\">{currencyFormat(total)}</h4>\n            </div>\n            <div className=\"quoteTable\">\n\n\n                <div className=\"table-container\">\n                    <table className=\"quote-table\">\n                        <thead>\n                            <tr key=\"head\" >\n                                {heading.map((item, key) => {\n                                    return (\n                                        <td key={key}><center>{item.label}</center></td>\n                                    )\n                                })}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.rows.map((item, key) => {\n                                return (\n                                    <tr id=\"addr0\" key={key} >\n                                        <td><center>{item.name}</center></td>\n                                        <td>{item.age}</td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                </div >\n                )\n\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}