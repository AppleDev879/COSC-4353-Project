{"ast":null,"code":"var _jsxFileName = \"/Users/Andrew/Documents/OneDrive - University Of Houston/AAA+++ Stuff/SWD/frontend/src/components/Quote/FuelQuoteForm.jsx\";\nimport React from 'react';\nimport { useState } from 'react';\nimport \"./Fuelquoteform.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FuelQuoteForm extends React.Component {\n  // Set by the pricing module\n  // Set by the client profile\n  constructor(props) {\n    super(props);\n    this.pricePerGallon = 34.34;\n    this.deliveryAddress = \"2115 Heather Green Dr.\";\n\n    this.handleAddRow = () => {\n      const item = {\n        date: this.state.date,\n        gallons: this.state.gallons,\n        total: this.state.total\n      };\n      this.setState({\n        rows: [...this.state.rows, item]\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        total: Math.round(this.pricePerGallon * this.state.gallons * 100) / 100\n      });\n      this.handleAddRow();\n    };\n\n    this.state = {\n      gallons: 0,\n      date: \"\",\n      total: 0.00,\n      rows: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  // From: https://stackoverflow.com/a/55556258/817946\n  currencyFormat(num) {\n    return '$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quoteForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pricing Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Gallons:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"numberOfGallons\",\n              value: this.state.gallons,\n              name: \"gallons\",\n              onChange: e => this.handleInputChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Delivery Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"deliveryAddress\",\n              value: this.deliveryAddress,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Delivery date\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"deliveryDate\",\n              value: this.state.date,\n              onChange: e => this.handleInputChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Price per gallon\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"pricePerGallon\",\n              value: this.pricePerGallon,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"totalPrice\",\n          children: this.currencyFormat(this.state.total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FuelQuoteForm;","map":{"version":3,"sources":["/Users/Andrew/Documents/OneDrive - University Of Houston/AAA+++ Stuff/SWD/frontend/src/components/Quote/FuelQuoteForm.jsx"],"names":["React","useState","FuelQuoteForm","Component","constructor","props","pricePerGallon","deliveryAddress","handleAddRow","item","date","state","gallons","total","setState","rows","handleSubmit","event","preventDefault","Math","round","handleInputChange","bind","target","value","type","checked","name","currencyFormat","num","toFixed","replace","render","e"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport \"./Fuelquoteform.css\"\n\nclass FuelQuoteForm extends React.Component {\n\n    // Set by the pricing module\n    pricePerGallon = 34.34;\n\n    // Set by the client profile\n    deliveryAddress = \"2115 Heather Green Dr.\"\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            gallons: 0,\n            date: \"\",\n            total: 0.00,\n            rows: []\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleAddRow = () => {\n        const item = {\n            date: this.state.date,\n            gallons: this.state.gallons,\n            total: this.state.total\n        };\n        this.setState({\n            rows: [...this.state.rows, item]\n        });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({\n            total: Math.round(this.pricePerGallon * this.state.gallons * 100) / 100\n        })\n        this.handleAddRow();\n    }\n\n    // From: https://stackoverflow.com/a/55556258/817946\n    currencyFormat(num) {\n        return '$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n    }\n\n    render() {\n        return (\n            <div className=\"container\" >\n                <div className=\"quoteForm\">\n                    <h3>Pricing Form</h3>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>Gallons:\n                            <input type=\"number\"\n                                className=\"numberOfGallons\"\n                                value={this.state.gallons}\n                                name=\"gallons\"\n                                onChange={(e) => this.handleInputChange(e)}\n                            />\n                        </label>\n                        <br />\n                        <label>\n                            Delivery Address:\n                            <input type=\"text\"\n                                className=\"deliveryAddress\"\n                                value={this.deliveryAddress}\n                                readOnly={true}\n                            />\n                        </label>\n                        <br />\n                        <label>Delivery date\n                            <input type=\"date\"\n                                className=\"deliveryDate\"\n                                value={this.state.date}\n                                onChange={(e) => this.handleInputChange(e)}\n                            />\n                        </label>\n                        <br />\n                        <label>Price per gallon\n                            <input\n                                className=\"pricePerGallon\"\n                                value={this.pricePerGallon}\n                                readOnly={true}\n                            />\n                        </label>\n                        <br />\n                        <input type=\"submit\" />\n                    </form>\n                    <h4 className=\"totalPrice\">{this.currencyFormat(this.state.total)}</h4>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FuelQuoteForm;"]},"metadata":{},"sourceType":"module"}